export const schemaValidator = {
  title: 'Validate JSON Against Schema - Check Data Structure Integrity',
  h1Title: 'Validate JSON Against Schema Rules',
  seo_title: 'Validate JSON Against Schema - Check Data Structure Integrity',
  description: 'Verify JSON data compliance against schema specifications. Ensure API contracts, data types, and field constraints match your application requirements perfectly.',
  keywords: 'JSON Schema,JSON validation,Schema validation,JSON structure validation,JSON format validation,JSON schema validator,schema conformance checker,JSON data integrity,validate against schema,JSON constraint validation,type validation,structural validation,pattern validation,JSON rules validation,required fields validator,JSON format checker,JSON contract validator,API schema validation',
  introduction: 'Need to ensure your JSON data matches a specific schema (e.g., API contracts or data models)? Our **JSON Schema Validator** checks if your JSON conforms to a defined schema, verifying field types, required keys, and data constraints. This is critical for team collaborations, API documentation, and ensuring data consistency across systems.\n\nHow it works: Upload your JSON and schema file (or paste the schema directly), and we\'ll validate against properties like `type`, `enum`, `minimum`, and `pattern`. Error messages point to exactly where the data fails to match the schema, helping you fix issues quickly.\n\nWhether you\'re developing microservices, validating user inputs, or standardizing data pipelines, our **validate json schema** tool ensures your data structures are reliable and compliant. Try it for free today!',
  jsonData: 'JSON Data',
  jsonSchema: 'JSON Schema',
  options: 'Validation Options',
  validate: 'Validate',
  validating: 'Validating...',
  clear: 'Clear',
  loadExample: 'Load Example',
  jsonPlaceholder: 'Enter or paste JSON data to validate',
  schemaPlaceholder: 'Enter or paste JSON Schema',
  result: 'Validation Result',
  valid: 'Valid',
  invalid: 'Invalid',
  errorDetails: 'Error Details',
  guideTitle: 'JSON Schema Guide',
  guideDescription: 'JSON Schema is a standard for describing and validating JSON data structures. Here are some common validation rules:',
  basicTypesTitle: 'Basic Type Validation',
  commonRulesTitle: 'Common Validation Rules',
  strictMode: 'Strict Mode',
  strictModeDescription: 'Enforce additional validation constraints not specified in the JSON Schema spec',
  jsonParseError: 'JSON Parse Error',
  schemaParseError: 'Schema Parse Error',
  rules: 'Common validation rules'
}; 