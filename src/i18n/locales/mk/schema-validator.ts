export const schemaValidator = {
  title: 'JSON Валидатор на шема',
  h1Title: 'Validate JSON Schema',
  seo_title: 'Валидирај JSON наспроти шема – Обезбеди интегритет на структурата на податоците',
  description: 'Провери усогласеност на JSON податоци со спецификациите на шемата. Осигури API договори, типови на податоци и ограничувања на полиња перфектно одговараат на барањата на вашата апликација.',
  keywords: 'JSON Шема,JSON валидација,Валидација на шема,Валидација на JSON структура,Валидација на JSON формат,JSON шема валидатор,проверувач на усогласеност со шема,JSON интегритет на податоци,валидирај наспроти шема,JSON валидација на ограничувања,валидација на тип,структурна валидација,валидација на шаблон,валидација на JSON правила,валидатор на задолжителни полиња,JSON проверувач на формат,JSON валидатор на договор,API валидација на шема',
  introduction: 'Треба да проверите дали вашите JSON податоци одговараат на одредена шема (на пр., API договори или модели на податоци)? Нашиот **JSON Валидатор на шема** проверува дали вашиот JSON е во согласност со дефинирана шема, верификувајќи ги типовите на полиња, задолжителните клучеви и ограничувањата на податоците. Ова е клучно за тимските соработки, API документацијата и обезбедување конзистентност на податоците низ системите.\n\nКако функционира: Прикачете ги вашите JSON и шема датотеки (или директно залепете ја шемата), и ќе валидираме наспроти својства како `type`, `enum`, `minimum` и `pattern`. Пораките за грешки точно покажуваат каде податоците не се совпаѓаат со шемата, помагајќи ви брзо да ги поправите проблемите.\n\nБез разлика дали развивате микросервиси, валидирате кориснички внесови или стандардизирате податочни протоци, нашата алатка за **валидација на json шема** обезбедува дека вашите структури на податоци се сигурни и усогласени. Пробајте ја бесплатно денес!',
  jsonData: 'JSON Податоци',
  jsonSchema: 'JSON Шема',
  options: 'Опции',
  validate: 'Валидирај',
  validating: 'Валидирање...',
  clear: 'Исчисти',
  loadExample: 'Вчитај пример',
  jsonPlaceholder: 'Внесете JSON податоци тука',
  schemaPlaceholder: 'Внесете JSON Шема тука',
  result: 'Резултат',
  valid: 'Валидно',
  invalid: 'Невалидно',
  errorDetails: 'Детали за грешка',
  guideTitle: 'Водич за JSON Шема',
  guideDescription: 'JSON Шема се користи за да се опише структурата и да се валидираат JSON податоци.',
  basicTypesTitle: 'Основни типови',
  commonRulesTitle: 'Вообичаени правила',
  strictMode: 'Строг режим',
  strictModeDescription: 'Примени дополнителни ограничувања за валидација кои не се наведени во спецификацијата на JSON Schema',
  jsonParseError: 'Грешка при анализа на JSON',
  schemaParseError: 'Грешка при анализа на шема',
  rules: 'Вообичаени правила за валидација',

  // How to Use Section
  howToUse: {
    title: 'Како да го користите JSON Валидаторот на шема',
    steps: [
      {
        title: 'Пригответе ги податоците',
        description: 'Внесете ги вашите JSON податоци што сакате да ги валидирате во левиот едитор. Овие може да бидат API одговори, конфигурациски датотеки или било какви JSON податоци.'
      },
      {
        title: 'Дефинирајте ја шемата',
        description: 'Внесете ја JSON шемата во десниот едитор. Шемата дефинира ги правилата, типовите на податоци, задолжителните полиња и ограничувањата што треба да ги следат вашите JSON податоци.'
      },
      {
        title: 'Конфигурирајте ги опциите',
        description: 'Изберете дали сакате да користите строг режим за дополнителни валидациски проверки кои можат да ви помогнат да ги уловите потенцијалните проблеми.'
      },
      {
        title: 'Валидирајте и прегледајте',
        description: 'Кликнете „Валидирај" за да ја стартувате проверката. Ако има грешки, ќе добиете детални информации за тоа што не одговара на шемата.'
      }
    ]
  },

  // FAQ Section
  faq: {
    title: 'Често поставувани прашања',
    items: [
      {
        question: 'Што е JSON шема и зошто ми е потребна?',
        answer: 'JSON шемата е стандард за дескрипција и валидација на структурата на JSON податоци. Тя дефинира кои полиња се задолжителни, кои типови на податоци се дозволени и кои ограничувања важат. Ова е важно за API договори, валидација на податоци и обезбедување конзистентност.'
      },
      {
        question: 'Кои верзии на JSON шема се поддржани?',
        answer: 'Нашиот валидатор поддржува JSON Schema Draft-07 и понови верзии. Ова вклучува поддршка за повеќето стандардни клучни зборови како type, properties, required, minimum, maximum, pattern и други.'
      },
      {
        question: 'Што значи „строг режим"?',
        answer: 'Строгиот режим применува дополнителни ограничувања кои можат да ви помогнат да ги уловите потенцијалните проблеми. На пример, тој може да ги пријави непознатите својства како грешки, дури и ако шемата не ги забранува експлицитно.'
      },
      {
        question: 'Како да креирам JSON шема?',
        answer: 'JSON шемата е самата по себе JSON документ кој ги дефинира правилата. Започнете со основниот тип (object, array, string, итн.), додајте properties за објекти, items за низи, и применете ограничувања како required, minimum, pattern според потребите.'
      },
      {
        question: 'Може ли да валидирам вгнездени објекти и низи?',
        answer: 'Да, JSON шемата целосно поддржува валидација на вгнездени структури. Можете да дефинирате шеми за објекти во објекти, низи од објекти, или било која комплексна структура користејќи клучните зборови properties и items.'
      },
      {
        question: 'Што треба да правам ако добивам грешки при валидација?',
        answer: 'Валидаторот дава детални пораки за грешки кои ви покажуваат точно каде податоците не одговараат на шемата. Користете ги овие информации за да ги поправите податоците или да ја адаптирате шемата според потребите.'
      },
      {
        question: 'Дали моите податоци и шеми се безбедни?',
        answer: 'Апсолутно! Сета валидација се извршува локално во вашиот прелистувач. Ниту вашите JSON податоци ниту шемите се пратени на сервер или зачувани надвор од вашиот уред, осигурувајќи целосна приватност.'
      },
      {
        question: 'Можам ли да користам сложени шеми со референци?',
        answer: 'Да, валидаторот поддржува $ref клучниот збор за референцирање на други делови од шемата или надворешни шеми. Ова ви овозможува да креирате модуларни и повторно употребливи дефиниции на шеми.'
      }
    ]
  }
}; 